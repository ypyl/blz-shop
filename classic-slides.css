.fallback-message {
  font-family: sans-serif;
  line-height: 1.3;

  width: 780px;
  padding: 10px 10px 0;
  margin: 20px auto;

  border: 1px solid #e4c652;
  border-radius: 10px;
  background: #eedc94;
}

.fallback-message p {
  margin-bottom: 10px;
}

.impress-supported .fallback-message {
  display: none;
}

body {
  font-family: "PT Sans", sans-serif;
  min-height: 740px;

  background: rgb(215, 215, 215);
  color: rgb(70, 70, 70);
}

.step {
  position: relative;
  width: 1800px;
  padding: 60px;
  margin: 60px auto;

  box-sizing: border-box;

  font-family: "PT Serif", georgia, serif;
  font-size: 60px;
  line-height: 1.5;
}

.impress-enabled .step {
  margin: 0;
  opacity: 0.3;
  transition: opacity 1s;
}

.impress-enabled .step.active {
  opacity: 1;
}

.slide {
  display: block;

  width: 1850px;
  height: 1000px;
  padding: 40px 60px;

  background-color: white;
  border: 2px solid rgba(0, 0, 0, 0.3);
  border-radius: 30px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

  text-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);

  font-family: "Open Sans", Arial, sans-serif;
  font-size: 45px;
  letter-spacing: -2px;
}

.title h1,
.title h2,
.title h3 {
  position: absolute;
  left: 90px; /* slide width is 1800px, so this is like a 5% margin on both sides */
  width: 90%;
  text-align: center;
}
.title h1 {
  top: 300px;
}
.title h3 {
  top: 600px;
}

.slide h1,
.slide h2,
.slide h3 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  text-align: center;
}

.slide p {
  text-align: left;
  margin: 0.7em;
}

.slide li {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  margin-left: 3em;
  margin-right: 3em;
}

em {
  text-shadow: 0 6px 6px rgba(0, 0, 0, 0.3);
}

strong {
  text-shadow: -3px 3px 6px rgba(100, 100, 100, 0.5);
}

q {
  font-family: "PT Serif";
  font-style: italic;
  font-weight: 400;
  text-shadow: 0 6px 6px rgba(0, 0, 0, 0.3);
}

strike {
  opacity: 0.7;
}

small {
  font-size: 0.4em;
}

.slide > div {
  display: flex;
  flex-direction: column;
  max-height: 1000px;
  height: 910px;
}

.slide > div > img {
  min-height: 0;
  object-fit: contain;
}

td {
  padding: 0.2em;
}

.slide .right {
  float: right;
  margin-left: 60px;
  margin-right: 0px;
  margin-top: 40px;
  margin-bottom: 40px;
}
.slide .left {
  float: left;
  margin-right: 60px;
  margin-left: 0px;
  margin-top: 40px;
  margin-bottom: 40px;
}
.slide .top {
  position: absolute;
  top: 40px;
  margin-bottom: 40px;
  margin-top: 0px;
}
.slide .bottom {
  position: absolute;
  bottom: 40px;
  margin-bottom: 0px;
  margin-top: 40px;
}

/* Styles for animating the contents of a slide, such as a img, p, li or span element. ********/

/*
 fly-in class starts from a position outside the slide, then flies into it's correct position.
*/
.future .fly-in {
  transform: translateY(-2100px);
  opacity: 0; /* Make it invisible, just so it doesn't clutter some other slide that might be in the position where we moved it */
}
.present .fly-in {
  transform: translateY(0px);
  opacity: 1;
  transition: 2s;
}
.past .fly-out {
  transform: translateY(2100px);
  opacity: 0;
  transition: 2s;
}

/*
   Fade-in/out is a straightforward fade. Give it enough seconds that all browsers render it clearly.
*/
.future .fade-in {
  opacity: 0;
}
.present .fade-in {
  opacity: 1;
  transition: 3s;
}
.past .fade-out {
  opacity: 0;
  transition: 3s;
}
/*
    Zoom-in.
*/
.future .zoom-in {
  transform: scale(10);
  opacity: 0;
}
.present .zoom-in {
  transform: scale(1);
  opacity: 1;
  transition: 3s;
}
.past .zoom-out {
  transform: scale(10);
  opacity: 0;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled {
  pointer-events: none;
}
.impress-enabled #impress {
  pointer-events: auto;
}
.impress-enabled #impress-toolbar {
  pointer-events: auto;
}
.impress-enabled #impress-console-button {
  pointer-events: auto;
}
